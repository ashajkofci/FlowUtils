name: Continuous Integration

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy>=1.22,<2.0
          pip install scipy>=1.7

      - name: Run tests
        run: |
          python -m unittest discover -s flowutils/tests -v

      - name: Test package installation
        run: |
          pip install -e .
          python -c "import flowutils; print('FlowUtils imported successfully')"
          python -c "from flowutils import transforms; import numpy as np; data = np.array([1, 10, 100]); result = transforms.logicle(data, None, t=262144, m=4.5, w=0.5, a=0); print('Basic logicle transform test passed')"

  benchmark:
    name: Performance benchmarks
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy>=1.22,<2.0
          pip install scipy>=1.7

      - name: Run performance benchmarks
        run: |
          python benchmark_suite.py

  lint:
    name: Code quality checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 flowutils --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 flowutils --count --exit-zero --max-line-length=100 --statistics

  coverage:
    name: Coverage report
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage
          pip install numpy>=1.22,<2.0
          pip install scipy>=1.7

      - name: Run tests with coverage
        run: |
          coverage run --source flowutils --omit="flowutils/tests/*" -m unittest discover -s flowutils/tests -v
          coverage report -m
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          fail_ci_if_error: false
          verbose: true