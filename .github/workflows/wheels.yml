name: Build wheels

on: 
  workflow_dispatch:
  release:
    types: [published]

# Restrict permissions for security
permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel

      - name: Build wheel and source distribution
        run: |
          python -m build

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*

  test_wheels:
    name: Test wheels
    needs: build_wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-ubuntu-latest
          path: dist/

      - name: Install wheel
        run: |
          pip install dist/*.whl

      - name: Test installation
        run: |
          python -c "import flowutils; print('FlowUtils installed successfully')"
          python -c "from flowutils import transforms; import numpy as np; data = np.array([1, 10, 100]); result = transforms.logicle(data, None, t=262144, m=4.5, w=0.5, a=0); print(f'Logicle test passed: {len(result)} == {len(data)}')"